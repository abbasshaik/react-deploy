{"version":3,"sources":["components/NavBar.jsx","components/postDisplay.jsx","components/post.jsx","App.js","index.js"],"names":["NavBar","Fragment","className","Component","PostDisplay","state","open","setOpen","currentDateTime","Date","toLocaleString","count","incrementMe","newCount","setState","decrementMe","modal","myModal","document","getElementById","myInput","addEventListener","focus","rel","href","style","backgroundColor","width","padding","overflow","this","props","context","onClick","Post","getPostContext","value","concat","console","log","handleDelete","postId","filter","c","id","rows","placeholder","map","key","App","ReactDOM","render","StrictMode"],"mappings":"iMAiBeA,E,4JAdb,WACE,OACE,eAAC,IAAMC,SAAP,WACE,qBAAKC,UAAU,gCAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,sBAAMA,UAAU,uBAAhB,wBAGJ,sBAAMA,UAAU,qB,GATHC,aC8ENC,E,4MA9EbC,MAAQ,CACNC,MAAM,EACNC,SAAS,EACTC,gBAAiBC,OAAOC,iBACxBC,MAAO,G,EAGTC,YAAc,WACZ,IAAIC,EAAW,EAAKR,MAAMM,MAAQ,EAClC,EAAKG,SAAS,CACZH,MAAOE,K,EAGXE,YAAc,WACZ,GAAI,EAAKV,MAAMM,MAAQ,EAAG,CACxB,IAAIE,EAAW,EAAKR,MAAMM,MAAQ,EAClC,EAAKG,SAAS,CACZH,MAAOE,M,EAIbG,MAAQ,WACN,IAAIC,EAAUC,SAASC,eAAe,WAClCC,EAAUF,SAASC,eAAe,WAEtCF,EAAQI,iBAAiB,kBAAkB,WACzCD,EAAQE,Y,4CAIZ,WACE,OACE,eAAC,IAAMrB,SAAP,WACE,sBACEsB,IAAI,aACJC,KAAK,yEAEP,iCACE,gCACE,uCAEE,uBAAOtB,UAAU,kBAAjB,SACE,mBAAGA,UAAU,4BAGjB,qBACEuB,MAAO,CACLC,gBAAiB,YACjBC,MAAO,QACPC,QAAS,OACTC,SAAU,UALd,SAQGC,KAAKC,MAAMC,UAEd,uBAAM9B,UAAU,gCAAhB,mBACW4B,KAAKzB,MAAMM,SAEtB,wBACEsB,QAASH,KAAKlB,YACdV,UAAU,wBAFZ,kBAMA,wBACE+B,QAASH,KAAKf,YACdb,UAAU,wBAFZ,qBAMA,4BAGJ,8B,GA1EkBC,aCoDX+B,E,4MAlDb7B,MAAQ,CACN2B,QAAS,GACTxB,gBAAiBC,OAAOC,kB,EAE1ByB,eAAiB,WACf,IAAMH,EAAUd,SAASC,eAAe,YAAYiB,MACpD,EAAKtB,SAAS,CAAEkB,QAAS,EAAK3B,MAAM2B,QAAQK,OAAOL,KACnD,EAAKlB,SAAS,CAAEN,gBAAiBC,OAAOC,mBACxC4B,QAAQC,IAAIP,I,EAGdQ,aAAe,SAACC,GACd,IAAMT,EAAU,EAAK3B,MAAM2B,QAAQU,QAAO,SAACC,GAAD,OAAOA,IAAMF,KACvD,EAAK3B,SAASkB,I,4CAEhB,WAAU,IAAD,OACP,OACE,eAAC,IAAM/B,SAAP,WACE,sBAAKC,UAAU,eAAf,UACE,uBAAOA,UAAU,aAAjB,4BACA,0BACEuB,MAAO,CAAEE,MAAO,KAChBzB,UAAU,eACV0C,GAAG,WACHC,KAAK,IACLC,YAAY,oBAEd,iCACE,wBACEb,QAASH,KAAKK,eACdjC,UAAU,yBAFZ,uBAQJ,qBAAK0C,GAAG,UAAR,SACGd,KAAKzB,MAAM2B,QAAQe,KAAI,SAACf,GAAD,OACtB,cAAC,EAAD,CACEA,QAASA,EAETxB,gBAAiB,EAAKH,MAAMG,iBADvBwB,EAAQgB,iB,GAzCR7C,aCaJ8C,E,4JAVb,WACE,OACE,eAAC,IAAMhD,SAAP,WACE,cAAE,EAAF,IACA,cAAE,EAAF,W,GANWE,a,MCEnB+C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFlC,SAASC,eAAe,W","file":"static/js/main.48a1aa77.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass NavBar extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <nav className=\"navbar navbar-dark bg-primary\">\r\n          <div className=\"container-fluid\">\r\n            <span className=\"navbar-brand mb-0 h1\">Ku Ku </span>\r\n          </div>\r\n        </nav>\r\n        <main className=\"container\"></main>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBar;\r\n","import React, { Component } from \"react\";\r\nclass PostDisplay extends Component {\r\n  state = {\r\n    open: false,\r\n    setOpen: false,\r\n    currentDateTime: Date().toLocaleString(),\r\n    count: 0,\r\n  };\r\n\r\n  incrementMe = () => {\r\n    let newCount = this.state.count + 1;\r\n    this.setState({\r\n      count: newCount,\r\n    });\r\n  };\r\n  decrementMe = () => {\r\n    if (this.state.count > 0) {\r\n      let newCount = this.state.count - 1;\r\n      this.setState({\r\n        count: newCount,\r\n      });\r\n    }\r\n  };\r\n  modal = () => {\r\n    var myModal = document.getElementById(\"myModal\");\r\n    var myInput = document.getElementById(\"myInput\");\r\n\r\n    myModal.addEventListener(\"shown.bs.modal\", function () {\r\n      myInput.focus();\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <link\r\n          rel=\"stylesheet\"\r\n          href=\"//cdn.materialdesignicons.com/3.7.95/css/materialdesignicons.min.css\"\r\n        ></link>\r\n        <center>\r\n          <div>\r\n            <h6>\r\n              Abbas\r\n              <small className=\"ml-4 text-muted\">\r\n                <i className=\"mdi mdi-clock mr-1\"></i>\r\n              </small>\r\n            </h6>\r\n            <div\r\n              style={{\r\n                backgroundColor: \"lightblue\",\r\n                width: \"600px\",\r\n                padding: \"25px\",\r\n                overflow: \"hidden\",\r\n              }}\r\n            >\r\n              {this.props.context}\r\n            </div>\r\n            <span className=\"badge badge-pill badge-sm m-2\">\r\n              &hearts;{this.state.count}\r\n            </span>\r\n            <button\r\n              onClick={this.incrementMe}\r\n              className=\"btn-danger btn-sm m-2\"\r\n            >\r\n              Like\r\n            </button>\r\n            <button\r\n              onClick={this.decrementMe}\r\n              className=\"btn-danger btn-sm m-2\"\r\n            >\r\n              Dislike\r\n            </button>\r\n            <hr></hr>\r\n          </div>\r\n        </center>\r\n        <br></br>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default PostDisplay;\r\n","import React, { Component } from \"react\";\r\nimport PostDisplay from \"./postDisplay\";\r\nclass Post extends Component {\r\n  state = {\r\n    context: [],\r\n    currentDateTime: Date().toLocaleString(),\r\n  };\r\n  getPostContext = () => {\r\n    const context = document.getElementById(\"postArea\").value;\r\n    this.setState({ context: this.state.context.concat(context) });\r\n    this.setState({ currentDateTime: Date().toLocaleString() });\r\n    console.log(context);\r\n  };\r\n\r\n  handleDelete = (postId) => {\r\n    const context = this.state.context.filter((c) => c !== postId);\r\n    this.setState(context);\r\n  };\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"form-outline\">\r\n          <label className=\"form-label\">Post Anything!</label>\r\n          <textarea\r\n            style={{ width: 683 }}\r\n            className=\"form-control\"\r\n            id=\"postArea\"\r\n            rows=\"4\"\r\n            placeholder=\"Write anything!\"\r\n          ></textarea>\r\n          <center>\r\n            <button\r\n              onClick={this.getPostContext}\r\n              className=\"btn-primary btn-sm m-2\"\r\n            >\r\n              Post\r\n            </button>\r\n          </center>\r\n        </div>\r\n        <div id=\"display\">\r\n          {this.state.context.map((context) => (\r\n            <PostDisplay\r\n              context={context}\r\n              key={context.key}\r\n              currentDateTime={this.state.currentDateTime}\r\n            />\r\n          ))}\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Post;\r\n","import React, { Component } from 'react';\nimport NavBar from './components/NavBar';\nimport Post from './components/post';\nclass  App extends Component {\n  \n  render() { \n    return (  \n      <React.Fragment>\n        < NavBar/>\n        < Post/>\n      </React.Fragment>\n    );\n  }\n}\n \nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}