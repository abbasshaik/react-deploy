{"version":3,"sources":["components/NavBar.jsx","components/modal.jsx","components/postDisplay.jsx","components/post.jsx","App.js","index.js"],"names":["NavBar","Fragment","className","Component","rand","Math","round","random","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","root","margin","SimpleModal","classes","React","useState","modalStyle","open","setOpen","body","style","id","noValidate","autoComplete","TextField","label","variant","onClick","fontSize","Modal","onClose","PostDisplay","state","currentDateTime","Date","toLocaleString","count","incrementMe","newCount","setState","decrementMe","modal","myModal","document","getElementById","myInput","addEventListener","focus","rel","href","overflow","this","props","context","Post","getPostContext","value","concat","console","log","handleDelete","postId","filter","c","rows","placeholder","map","key","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.3dc4defe.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass NavBar extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <nav className=\"navbar navbar-dark bg-primary\">\r\n          <div className=\"container-fluid\">\r\n            <span className=\"navbar-brand mb-0 h1\">Ku Ku </span>\r\n          </div>\r\n        </nav>\r\n        <main className=\"container\"></main>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nfunction rand() {\r\n  return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n  const top = 50 + rand();\r\n  const left = 50 + rand();\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: \"absolute\",\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function SimpleModal() {\r\n  const classes = useStyles();\r\n  // getModalStyle is not a pure function, we roll the style only on the first render\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const body = (\r\n    <div style={modalStyle} className={classes.paper}>\r\n      <h2 id=\"simple-modal-title\">Text in a modal</h2>\r\n      <p id=\"simple-modal-description\">Edit the post</p>\r\n      <form className={classes.root} noValidate autoComplete=\"off\">\r\n        <TextField id=\"filled-basic\" label=\"Filled\" variant=\"filled\" />\r\n      </form>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <button\r\n        className=\"btn-warning btn-sm m-2\"\r\n        style={{ padding: \"2px 4px\" }}\r\n        data-bs-toggle=\"modal\"\r\n        data-bs-target=\"#exampleModal\"\r\n        onClick={handleOpen}\r\n      >\r\n        <EditIcon fontSize=\"small\">add_circle</EditIcon>\r\n      </button>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n      >\r\n        {body}\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport SimpleModal from \"./modal\";\r\nclass PostDisplay extends Component {\r\n  state = {\r\n    open: false,\r\n    setOpen: false,\r\n    currentDateTime: Date().toLocaleString(),\r\n    count: 0,\r\n  };\r\n\r\n  incrementMe = () => {\r\n    let newCount = this.state.count + 1;\r\n    this.setState({\r\n      count: newCount,\r\n    });\r\n  };\r\n  decrementMe = () => {\r\n    if (this.state.count > 0) {\r\n      let newCount = this.state.count - 1;\r\n      this.setState({\r\n        count: newCount,\r\n      });\r\n    }\r\n  };\r\n  modal = () => {\r\n    var myModal = document.getElementById(\"myModal\");\r\n    var myInput = document.getElementById(\"myInput\");\r\n\r\n    myModal.addEventListener(\"shown.bs.modal\", function () {\r\n      myInput.focus();\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <link\r\n          rel=\"stylesheet\"\r\n          href=\"//cdn.materialdesignicons.com/3.7.95/css/materialdesignicons.min.css\"\r\n        ></link>\r\n        <center>\r\n          <div>\r\n            <h6>\r\n              Abbas\r\n              <small className=\"ml-4 text-muted\">\r\n                <i className=\"mdi mdi-clock mr-1\"></i>\r\n              </small>\r\n            </h6>\r\n            <div\r\n              style={{\r\n                backgroundColor: \"lightblue\",\r\n                width: \"600px\",\r\n                padding: \"25px\",\r\n                overflow: \"hidden\",\r\n              }}\r\n            >\r\n              {this.props.context}\r\n            </div>\r\n            <span className=\"badge badge-pill badge-sm m-2\">\r\n              &hearts;{this.state.count}\r\n            </span>\r\n            <button\r\n              onClick={this.incrementMe}\r\n              className=\"btn-danger btn-sm m-2\"\r\n            >\r\n              Like\r\n            </button>\r\n            <button\r\n              onClick={this.decrementMe}\r\n              className=\"btn-danger btn-sm m-2\"\r\n            >\r\n              Dislike\r\n            </button>\r\n\r\n            <SimpleModal />\r\n            <hr></hr>\r\n          </div>\r\n        </center>\r\n        <br></br>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default PostDisplay;\r\n","import React, { Component } from \"react\";\r\nimport PostDisplay from \"./postDisplay\";\r\nclass Post extends Component {\r\n  state = {\r\n    context: [],\r\n    currentDateTime: Date().toLocaleString(),\r\n  };\r\n  getPostContext = () => {\r\n    const context = document.getElementById(\"postArea\").value;\r\n    this.setState({ context: this.state.context.concat(context) });\r\n    this.setState({ currentDateTime: Date().toLocaleString() });\r\n    console.log(context);\r\n  };\r\n\r\n  handleDelete = (postId) => {\r\n    const context = this.state.context.filter((c) => c !== postId);\r\n    this.setState(context);\r\n  };\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"form-outline\">\r\n          <label className=\"form-label\">Post Anything!</label>\r\n          <textarea\r\n            style={{ width: 683 }}\r\n            className=\"form-control\"\r\n            id=\"postArea\"\r\n            rows=\"4\"\r\n            placeholder=\"Write anything!\"\r\n          ></textarea>\r\n          <center>\r\n            <button\r\n              onClick={this.getPostContext}\r\n              className=\"btn-primary btn-sm m-2\"\r\n            >\r\n              Post\r\n            </button>\r\n          </center>\r\n        </div>\r\n        <div id=\"display\">\r\n          {this.state.context.map((context) => (\r\n            <PostDisplay\r\n              context={context}\r\n              key={context.key}\r\n              currentDateTime={this.state.currentDateTime}\r\n            />\r\n          ))}\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Post;\r\n","import React, { Component } from 'react';\nimport NavBar from './components/NavBar';\nimport Post from './components/post';\nclass  App extends Component {\n  \n  render() { \n    return (  \n      <React.Fragment>\n        < NavBar/>\n        < Post/>\n      </React.Fragment>\n    );\n  }\n}\n \nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}